# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type BroadcastLiquidTransaction {
  tx_id: String!
}

input BroadcastLiquidTransactionInput {
  signed_pset: String!
  wallet_account_id: String!
}

input CreateAccountInput {
  liquid_descriptor: String!
  name: String
  type: WalletAccountType!
}

type CreateLiquidTransaction {
  base_64: String!
}

input CreateLiquidTransactionInput {
  fee_rate: Float!
  recipients: [LiquidRecipient!]!
  wallet_account_id: String!
}

type CreateOnchainAddress {
  address: String!
}

input CreateOnchainAddressInput {
  wallet_account_id: String!
}

type CreateWallet {
  id: String!
}

input CreateWalletInput {
  accounts: [CreateAccountInput!]!
  name: String
  vault: String
}

input LiquidRecipient {
  address: String!
  amount: String!
  asset_id: String
}

input LoginInput {
  email: String!
  master_password_hash: String!
}

type Mutation {
  checkPassword(password: String!): Boolean!
  login(input: LoginInput!): NewAccount!
  logout: Boolean!
  refreshToken: RefreshToken!
  signUp(input: SignUpInput!): NewAccount!
  wallets: WalletMutations!
}

type NewAccount {
  access_token: String!
  id: String!
  refresh_token: String!
}

type Query {
  hello: String!
  user: User!
  wallets: WalletQueries!
}

input RSAKeyPairInput {
  protected_private_key: String!
  public_key: String!
}

type RefreshToken {
  access_token: String!
  id: String!
  refresh_token: String!
}

input RefreshWalletInput {
  wallet_id: String!
}

input SignUpInput {
  email: String!
  master_password_hash: String!
  password_hint: String
  protected_symmetric_key: String!
  rsa_key_pair: RSAKeyPairInput!
  symmetric_key_iv: String!
}

type SimpleWallet {
  accounts: [SimpleWalletAccount!]!
  id: String!
  name: String!
}

type SimpleWalletAccount {
  account_type: WalletAccountType!
  id: String!
  name: String!
}

type User {
  email: String!
  id: String!
  symmetric_key_iv: String!
}

type Wallet {
  accounts: [WalletAccount!]!
  id: String!
  name: String!
  vault: String!
}

type WalletAccount {
  account_type: WalletAccountType!
  descriptor: String!
  id: String!
  liquid_assets: [WalletLiquidAsset!]!
  name: String!
}

enum WalletAccountType {
  LIQUID
}

type WalletLiquidAsset {
  asset_id: String!
  asset_info: WalletLiquidAssetInfo!
  balance: String!
  id: String!
  transactions: [WalletLiquidTransaction!]!
}

type WalletLiquidAssetInfo {
  id: String!
  is_featured: Boolean!
  name: String!
  precision: Float!
  ticker: String!
}

type WalletLiquidTransaction {
  balance: String!
  blinded_url: String!
  block_height: String
  date: String
  fee: String!
  id: String!
  tx_id: String!
  unblinded_url: String!
}

type WalletMutations {
  broadcast_liquid_transaction(input: BroadcastLiquidTransactionInput!): BroadcastLiquidTransaction!
  create(input: CreateWalletInput!): CreateWallet!
  create_liquid_transaction(input: CreateLiquidTransactionInput!): CreateLiquidTransaction!
  create_onchain_address(input: CreateOnchainAddressInput!): CreateOnchainAddress!
  refresh_wallet(input: RefreshWalletInput!): Boolean!
}

type WalletQueries {
  find_many: [SimpleWallet!]!
  find_one(id: String!): Wallet!
  id: String!
}