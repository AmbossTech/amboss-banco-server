// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator json {
  provider = "prisma-json-types-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model account {
  id                      String               @id() @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at              DateTime             @default(now()) @db.Timestamp(6)
  updated_at              DateTime             @default(now()) @updatedAt @db.Timestamp(6)
  email                   String               @unique @db.VarChar
  password_hint           String?              @db.VarChar
  master_password_hash    String               @db.VarChar
  symmetric_key_iv        String               @db.VarChar
  protected_symmetric_key String               @db.VarChar
  refresh_token_hash      String?              @db.VarChar
  /// [Secp256k1KeyPair]
  secp256k1_key_pair      Json                 @db.JsonB
  wallets                 wallet_on_accounts[]
}

model wallet_on_accounts {
  created_at         DateTime @default(now()) @db.Timestamp(6)
  updated_at         DateTime @default(now()) @updatedAt @db.Timestamp(6)
  is_owner           Boolean
  lightning_address  String?  @unique @db.VarChar
  /// [Secp256k1KeyPair]
  secp256k1_key_pair Json     @db.JsonB
  /// [WalletDetails]
  details            Json     @db.JsonB
  account            account  @relation(fields: [account_id], references: [id])
  account_id         String   @db.Uuid
  wallet             wallet   @relation(fields: [wallet_id], references: [id])
  wallet_id          String   @db.Uuid

  @@id([account_id, wallet_id])
}

model wallet {
  id             String               @id() @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at     DateTime             @default(now()) @db.Timestamp(6)
  updated_at     DateTime             @default(now()) @updatedAt @db.Timestamp(6)
  name           String               @db.VarChar
  accounts       wallet_on_accounts[]
  wallet_account wallet_account[]
}

model wallet_account {
  id         String   @id() @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp(6)
  name       String   @db.VarChar
  /// [WalletAccountDetails]
  details    Json     @db.JsonB
  wallet     wallet   @relation(fields: [wallet_id], references: [id])
  wallet_id  String   @db.Uuid
}
