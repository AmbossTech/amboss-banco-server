// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator json {
  provider = "prisma-json-types-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model account {
  id                      String               @id() @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at              DateTime             @default(now()) @db.Timestamp(6)
  updated_at              DateTime             @default(now()) @updatedAt @db.Timestamp(6)
  last_login_at           DateTime             @default(now()) @db.Timestamp(6)
  email                   String               @unique @db.VarChar
  password_hint           String?              @db.VarChar
  master_password_hash    String               @db.VarChar
  protected_symmetric_key String               @db.VarChar
  refresh_token_hash      String?              @db.VarChar
  /// [Secp256k1KeyPair]
  secp256k1_key_pair      Json                 @db.JsonB
  wallets                 wallet_on_accounts[]
  account_2fa             account_2fa[]
}

model wallet_on_accounts {
  id                    String    @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at            DateTime  @default(now()) @db.Timestamp(6)
  updated_at            DateTime  @default(now()) @updatedAt @db.Timestamp(6)
  is_owner              Boolean
  user_backup_confirmed Boolean   @default(false)
  money_address_user    String?   @unique @db.VarChar
  /// [Secp256k1KeyPair]
  secp256k1_key_pair    Json      @db.JsonB
  /// [WalletDetails]
  details               Json      @db.JsonB
  account               account   @relation(fields: [account_id], references: [id])
  account_id            String    @db.Uuid
  wallet                wallet    @relation(fields: [wallet_id], references: [id])
  wallet_id             String    @db.Uuid
  contacts              contact[]

  @@id([account_id, wallet_id])
}

model contact {
  id                    String             @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at            DateTime           @default(now()) @db.Timestamp(6)
  updated_at            DateTime           @default(now()) @updatedAt @db.Timestamp(6)
  money_address         String             @db.VarChar
  wallet_on_accounts    wallet_on_accounts @relation(fields: [wallet_on_accounts_id], references: [id])
  wallet_on_accounts_id String             @db.Uuid
  contact_message       contact_message[]

  @@id([wallet_on_accounts_id, money_address])
}

model contact_message {
  id                String   @id() @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at        DateTime @default(now()) @db.Timestamp(6)
  updated_at        DateTime @default(now()) @updatedAt @db.Timestamp(6)
  contact_is_sender Boolean
  payload           Json     @db.JsonB
  contact           contact? @relation(fields: [contact_id], references: [id])
  contact_id        String?  @db.Uuid
}

model wallet {
  id             String               @id() @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at     DateTime             @default(now()) @db.Timestamp(6)
  updated_at     DateTime             @default(now()) @updatedAt @db.Timestamp(6)
  name           String               @db.VarChar
  accounts       wallet_on_accounts[]
  wallet_account wallet_account[]
}

model wallet_account {
  id                  String                @id() @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at          DateTime              @default(now()) @db.Timestamp(6)
  updated_at          DateTime              @default(now()) @updatedAt @db.Timestamp(6)
  name                String                @db.VarChar
  /// [WalletAccountDetails]
  details             Json                  @db.JsonB
  wallet              wallet                @relation(fields: [wallet_id], references: [id])
  wallet_id           String                @db.Uuid
  wallet_account_swap wallet_account_swap[]
}

model wallet_account_swap {
  id                String         @id() @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at        DateTime       @default(now()) @db.Timestamp(6)
  updated_at        DateTime       @default(now()) @updatedAt @db.Timestamp(6)
  swap_completed    Boolean        @default(false)
  /// [AccountSwapRequest]
  request           Json           @db.JsonB
  /// [AccountSwapResponse]
  response          Json           @db.JsonB
  wallet_account    wallet_account @relation(fields: [wallet_account_id], references: [id])
  wallet_account_id String         @db.Uuid
}

model account_2fa {
  id         String        @id() @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at DateTime      @default(now()) @db.Timestamp(6)
  updated_at DateTime      @default(now()) @updatedAt @db.Timestamp(6)
  account    account       @relation(fields: [account_id], references: [id])
  account_id String        @db.Uuid
  method     two_fa_method
  enabled    Boolean       @default(true)
  /// [TwoFactorPayload]
  payload    Json          @db.JsonB
}

enum two_fa_method {
  OTP
  PASSKEY
}
